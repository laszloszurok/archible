- name: Configuration | Set the timezone
  community.general.timezone:
    name: "{{ arch_config_timezone }}"

- name: Configuration | Generate the locale
  community.general.locale_gen:
    name: "{{ arch_config_locale }}"

- name: Configure | Edit pacman.conf
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: ^#?\s*Color, line: Color }
    - { regexp: ^#?\s*ParallelDownloads, line: ParallelDownloads = 10 }

- name: Configuration | Install packages from standard repositories
  community.general.pacman:
    name: "{{ arch_config_standard_packages }}"

- name: Configuration | Install packages from PyPi
  ansible.builtin.pip:
    name: "{{ arch_config_pip_packages }}"

- name: Configuration | Add user
  ansible.builtin.user:
    name: "{{ arch_config_user_name }}"
    password: "{{ arch_config_user_password }}"
    groups: "{{ arch_config_user_groups }}"
    shell: "{{ arch_config_user_shell }}"

- name: Configuration | Give sudo access to the members of the wheel group
  ansible.builtin.copy:
    content: "%wheel ALL=(ALL) ALL"
    dest: /etc/sudoers.d/wheel
    validate: /usr/sbin/visudo --check --file=%s

- name: Configuration | Set the hostname
  ansible.builtin.hostname:
    name: "{{ arch_config_hostname }}"

- name: Configuration | Install GRUB
  ansible.builtin.command: grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB

# acpi_backlight=none <- don't change the backlight on acpi events
# resume=UUID=uuid-of-the-swap-partition <- needed for hibernation
- name: Configuration | Set kernel options in /etc/default/grub
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: ^GRUB_CMDLINE_LINUX=
    line: GRUB_CMDLINE_LINUX="acpi_backlight=none resume=UUID={{ hostvars['localhost']['swap_uuid'] }}"

- name: Configuration | Create GRUB config file
  ansible.builtin.command: grub-mkconfig -o /boot/grub/grub.cfg

# the 'resume' hook is added to the HOOKS array <- needed for hibernation
- name: Configuration | Configure the initramfs
  ansible.builtin.lineinfile:
    path: /etc/mkinitcpio.conf
    regexp: ^HOOKS=
    line: HOOKS=(base udev autodetect modconf block filesystems keyboard resume fsck)

- name: Configuration | Regenerate the initramfs presets
  ansible.builtin.command: mkinitcpio -P

- name: Configure | Create symlink /bin/sh -> dash
  ansible.builtin.file:
    src: /bin/dash
    dest: /bin/sh
    state: link
    force: yes

- name: Configure | Create pacman hook to relink /bin/sh after system updates
  ansible.builtin.copy:
    content: |
      [Trigger]
      Type = Package
      Operation = Install
      Operation = Upgrade
      Target = bash

      [Action]
      Description = Re-pointing /bin/sh symlink to dash...
      When = PostTransaction
      Exec = /usr/bin/ln -sfT dash /usr/bin/sh
      Depends = dash
    dest: /usr/share/libalpm/hooks/dashbinsh.hook
