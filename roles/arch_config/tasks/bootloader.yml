- name: Bootloader configuration | Check if systemd-boot is installed
  ansible.builtin.command: bootctl is-installed
  register: bootctl_isinstalled
  changed_when: false

- name: Bootloader configuration | Install systemd-boot if not present
  ansible.builtin.command: bootctl install
  changed_when: true
  when: bootctl_isinstalled.stdout == "no"

- name: Bootloader configuration | Check CPU vendor
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      grep vendor /proc/cpuinfo | uniq | grep -o '[^ ]*$'
    executable: /bin/bash
  register: cpu_vendor
  changed_when: false

- name: Bootloader configuration | Set microcode package prefix based on CPU vendor
  ansible.builtin.set_fact:
    microcode_package_prefix: |
      {% if cpu_vendor.stdout == "AuthenticAMD" %}
        amd
      {% elif cpu_vendor.stdout == "GenuineIntel" %}
        intel
      {% else %}
        unknown
      {% endif %}

- name: Bootloader configuration | Install vendor specific microcode
  ansible.builtin.package:
    name: "{{ microcode_package_prefix | trim }}-ucode"
  when: (microcode_package_prefix | trim) != "unknown"

- name: Bootloader configuration | Adding bootmenu entries
  ansible.builtin.copy:
    content: |
      title   Arch Linux
      linux   /vmlinuz-linux
      {{ 'initrd  /' + (microcode_package_prefix | trim) + '-ucode.img' if (microcode_package_prefix | trim) != 'unknown' }}
      initrd  /initramfs-linux.img
      options root=UUID={{ hostvars['localhost']['root_uuid'] }} resume=UUID={{ hostvars['localhost']['swap_uuid'] }}
    dest: /boot/loader/entries/arch.conf
